.data 0x10010000
var1: .word	 83 # initial value 83
var2: .word 104 # initial value 104
var3: .word 111 # initial value 111
var4: .word 119 # initial value 119
first: .byte 'S' # initial value S
last: .byte 'S'	 # initial value S
.text
.globl main
main: addu $s0, $ra, $0# save $31 in $16
lui $1, 4097	# $1 <- 0x10010000	
lw $13, 0($1)	# $13 <- M[$1 + 0]
lui $1, 4097	# $1 <- 0x10010000
lw $14, 4($1)	# $14 <- M[$1 + 4]
lui $1, 4097	# $1 <- 0x10010000	
lw $15, 8($1)	# $15 <- M[$1 + 8]
lui $1, 4097 	# $1 <- 0x10010000
lw $24, 12($1)	# $24 <- M[$1 + 12]
lui $1, 4097 	# $1 <- 0x10010000	
sw $13, 12($1)	# $13 <- M[$1 + 12]
lui $1, 4097  	# $1 <- 0x10010000
sw $14, 8($1)	# $14 <- M[$1 + 8]
lui $1, 4097	# $1 <- 0x10010000	
sw $15, 4($1)	# $15 <- M[$1 + 4]
lui $1, 4097    # $1 <- 0x10010000	 
sw $24, 0($1)	# $24 <- M[$1 + 0]
lui $1, 4097 	# $1 <- 0x10010000	
lb $9, 16($1)	# $9 <- M[$1 + 16]
lui $1, 4097	# $1 <- 0x10010000	
addu $1, $1, $8 # $1 <- $1 + $8
sb $10, 16($1)	# $10 <- M[$1 + 16]
lui $1, 4097	# $1 <- 0x10010000	
lb $11, 17($1)	# $11 <- M[$1 + 17]	
lui $1, 4097	# $1 <- 0x10010000	
addu $1, $1, $8	# $1 <- $1 + $8
sb $12, 17($1)	# $12 <- M[$1 + 17]
addu $31, $0, $16 # $31 <- $0 + $16             
jr $31          #PC -> nPC; nPC -> $31                          
ori $2, $0, 10  # $2 <- $0 + 10                
syscall         # syscall 10 (exit)          
